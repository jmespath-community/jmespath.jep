name: length
topic: collections
args:
  required:
  - name: subject
    type: [string, array, object]
    desc: ''
  optional: []
returns:
  type: number
  desc: ''
desc: |
  Returns the length of the given argument using the following types rules:


  1. string: returns the number of code points in the string


  2. array: returns the number of elements in the array


  3. object: returns the number of key-value pairs in the object
examples:
  test0:
    context:
    args: ["'abc'"]
    returns: 3
  test1:
    context:
    args: ['@']
    returns: 7
  test2:
    context:
    args: [not_there]
    error: invalid-type
  test3:
    context: [a, b, c]
    args: ['@']
    returns: 3
  test4:
    context: []
    args: ['@']
    returns: 0
  test5:
    context: {}
    args: ['@']
    returns: 0
  test6:
    context: {foo: bar, baz: bam}
    args: ['@']
    returns: 2
  test7:
    context: &data
      foo: -1
      zero: 0
      numbers: [-1, 3, 4, 5]
      array: [-1, 3, 4, 5, a, '100']
      strings: [a, b, c]
      decimals: [1.01, 1.2, -1.5]
      str: Str
      'false': false
      empty_list: []
      empty_hash: {}
      objects: {foo: bar, bar: baz}
      null_key:
    args: [abc]
    returns: 3
  test8:
    context: *data
    args: ["'\\u2713foo'"]
    returns: 4
  test9:
    context: *data
    args: ["''"]
    returns: 0
  test10:
    context: *data
    args: ['@']
    returns: 12
  test11:
    context: *data
    args: ['strings[0]']
    returns: 1
  test12:
    context: *data
    args: [str]
    returns: 3
  test13:
    context: *data
    args: [array]
    returns: 6
  test14:
    context: *data
    args: [objects]
    returns: 2
  test15:
    context: *data
    args: [false]
    error: invalid-type
  test16:
    context: *data
    args: [foo]
    error: invalid-type
