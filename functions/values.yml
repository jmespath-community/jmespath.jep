name: values
topic: collections
args:
  required:
  - name: obj
    type: [object]
    desc: ""
  optional: []
returns:
  type: array
  desc: ""
desc: |
  Returns the values of the provided object.
  Note that because JSON hashes are inheritently unordered, the
  values associated with the provided object `obj` are inheritently
  unordered.  Implementations are not required to return values in
  any specific order.  For example, given the input:

  ```
  {"a": "first", "b": "second", "c": "third"}
  ```

  The expression `values(@)` could have any of these return values:


  * `["first", "second", "third"]`


  * `["first", "third", "second"]`


  * `["second", "first", "third"]`


  * `["second", "third", "first"]`


  * `["third", "first", "second"]`


  * `["third", "second", "first"]`

  If you would like a specific order, consider using the
  `sort` or `sort_by` functions.
examples:
- context: {foo: baz, bar: bam}
  args: ['@']
  returns: [baz, bam]
- context: [a, b]
  args: ['@']
  error: invalid-type
- context: false
  args: ['@']
  error: invalid-type
- context:
    foo: -1
    zero: 0
    numbers: [-1, 3, 4, 5]
    array: [-1, 3, 4, 5, a, '100']
    strings: [a, b, c]
    decimals: [1.01, 1.2, -1.5]
    str: Str
    'false': false
    empty_list: []
    empty_hash: {}
    objects: {foo: bar, bar: baz}
    null_key:
  args: [foo]
  error: invalid-type
